
@{
    ViewBag.Title = "UserManagement_Edit";
    var role_list = ViewData["role"] as List<PPCRental.Models.ROLE>;
}

@{
    //kiểm tra User-Role
    String userRole = Session["userRole"] as String;
    if (Session["user"] == null)
    {
        Session.RemoveAll();
        Session["login-status"] = "NotLogin";
        Response.Redirect("~/User/Login", false);

    }
    else if (!(userRole.Equals("Technical")))
    {
        Session.RemoveAll();
        Session["login-status"] = "WrongRole";
        Response.Redirect("~/User/Login", false);

    }
}
<h2 style="text-align: center">User Management</h2><br />

<div id="" class="container" style="background-color:burlywood;">

    <nav class="navbar navbar-default" style="float: left">
        <ul class="nav navbar-nav">
            <li><a href="@Url.Action("UserManagement_Views", "User")">Views</a></li>
            <li class="active"><a>Edit</a></li>
        </ul>
    </nav>

    <select name="user_role" id="select_role" class="form-control" required="required">
        <option value="10">Tất cả</option>
        @{ 
            foreach(var item in role_list)
            {
                <option value="@item.id">@item.roleName</option>
            }
        }
    </select>

    <table class="table table-hover table-bordered table-striped" id="table-user" style="background-color: antiquewhite;">
        <thead>
            <tr>
                <th>ID</th>
                <th>Email</th>
                <th>Password</th>
                <th>Fullname</th>
                <th>Phone</th>
                <th>Address</th>
                <th>RoleID</th>
                <th>Status</th>
                <th>Serect Question</th>
                <th>Answer</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody></tbody>

    </table>

    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="modal-header">Modal header</h4>
                </div>
                <div class="modal-body">
                    <table class="table table-hover" id="table-modal-user">
                        <thead>
                            <tr>
                                <th>Key</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <th>ID</th>
                                <td id="td-id" value="">
                                    <input type="text" id="input-id" class="form-control" value="" readonly>
                                </td>
                            </tr>
                            <tr>
                                <th>Email</th>
                                <td id="td-email">
                                    <input type="text" id="input-email" class="form-control" value="" readonly>
                                </td>
                            </tr>
                            <tr>
                                <th>Password</th>
                                <td id="td-pwd">
                                    <input type="text" id="input-pwd" class="form-control" value="" readonly>
                                </td>
                            </tr>
                            <tr>
                                <th>Fullname</th>
                                <td id="td-fullname">
                                    <input type="text" id="input-fullname" class="form-control" value="">
                                </td>
                            </tr>
                            <tr>
                                <th>Phone</th>
                                <td id="td-phone">
                                    <input type="text" id="input-phone" class="form-control" value="">
                                </td>
                            </tr>
                            <tr>
                                <th>Address</th>
                                <td id="td-address">
                                    <input type="text" id="input-address" class="form-control" value="">
                                </td>
                            </tr>
                            <tr>
                                <th>RoleID</th>
                                <td id="td-role">
                                    <select id="edit-role" class="form-control" ></select>
                                </td>
                            </tr>
                            <tr>
                                <th>Active</th>
                                <td id="td-status">
                                    <select id="edit-status" class="form-control"></select>
                                </td>
                            </tr>
                            <tr>
                                <th>Question</th>
                                <td id="td-question">
                                    <select id="edit-question" class="form-control" disabled></select>
                                </td>
                            </tr>
                            <tr>
                                <th>Answer</th>
                                <td id="td-answer">
                                    <input type="text" id="input-answer" class="form-control" value="" readonly>
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" id="btn-confirm">Confirm</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="">Close</button>
                </div>
            </div>

        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        $.ajax({
            url: '/User/ManageUser_Views',
            type: "POST",
            data: { role_id: 10 },
            dataType: "json",
            success: function (result) {
                convertDataToArray(result.Users).then((x) => {
                    $('#table-user').DataTable({
                        data: x,
                        "language": {
                            "paginate": {
                                "previous": "Previous ",
                                "next": " Next page"
                            }
                        }
                    });    
                }).catch((e) => {
                    console.log(e);
                });
            },
            error: function (err) {
                alert(err);
            }
        });
    })

    var role_id;
    $('#select_role').on('change', function () {
        role_id = $(this).find(":selected").val();
        //alert(role_id);
        $.ajax({
            url: '/User/ManageUser_Views',
            type: "POST",
            data: { role_id },
            dataType: "json",
            success: function (result) {
                //alert(result.Success);
                //console.log(result.Users);

                //$('#table-user tbody > tr').remove();
                //$.each(result.Users, function (index, value) {
                //    $('#table-user tbody').append(
                //        '<tr>'// need to change closing tag to an opening `<tr>` tag.
                //        + '<td>' + result.Users[index].ID + '</td>'
                //        + '<td>' + result.Users[index].Email + '</td>'
                //        + '<td>' + result.Users[index].Password + '</td>'
                //        + '<td>' + result.Users[index].FullName + '</td>'
                //        + '<td>' + result.Users[index].Phone + '</td>'
                //        + '<td>' + result.Users[index].Address + '</td>'
                //        + '<td>' + result.Users[index].RoleID + '</td>'
                //        + '<td>' + result.Users[index].Status + '</td>'
                //        + '<td>' + result.Users[index].question + '</td>'
                //        + '<td>' + result.Users[index].Answer + '</td>'
                //        + '<td><button type="button" class="btn btn-success" id="btn-edit" data-id="' + result.Users[index].ID + '">Edit</button></td>'
                //        + '</tr>');
                //});

                convertDataToArray(result.Users).then((x) => {
                    var table = $('#table-user').DataTable();
                    table.destroy();
                    table.clear().draw();
                    $('#table-user').DataTable({
                        data: x,
                        "language": {
                            "paginate": {
                                "previous": "Previous ",
                                "next": " Next page"
                            }
                        }
                    });
                }).catch((e) => {
                    console.log(e);
                });
            },
            error: function (err) {
                alert(err);

            }
        });

    });

    $(document).on('click', '#btn-edit', function () {
        var id = $(this).data('id');
        console.log('id: ', id);
        $.ajax({
            url: '/User/ManageUser_GetUser',
            type: "POST",
            data: { id: id },
            dataType: "json",
            //  contentType: "application/json; charset=utf-8",
            success: function (result) {
                //alert(res.User);
                //console.log(result.Data);
                //console.log(result.Question);
                
                $('.modal-header #modal-header').empty();
                $('.modal-header #modal-header').text(result.Data.email);
                $('#table-modal-user #input-id').empty();
                $('#table-modal-user #input-id').val(result.Data.id);
                $('#td-email #input-email').empty();
                $('#td-email #input-email').val(result.Data.email);
                $('#td-pwd #input-pwd').empty();
                $('#td-pwd #input-pwd').val(".................................");
                $('#td-fullname #input-fullname').empty();
                $('#td-fullname #input-fullname').val(result.Data.fullname);
                $('#td-phone #input-phone').empty();
                $('#td-phone #input-phone').val(result.Data.phone);
                $('#td-address #input-address').empty();
                $('#td-address #input-address').val(result.Data.address);

                //Edit Role ID
                //$('#table-modal-user #td-role').empty();
                //$('#table-modal-user #td-role').append(result.Data.role_id);
                $('#edit-role').find('option').remove();
                var role = [];
                result.Role.forEach((value) => {
                    var arr = $.map(value, function (value, index) {
                        return value;
                    })
                    role.push(arr);
                })
                role.forEach((value) => {
                    if (value[0] == parseInt(result.Data.role_id)) {
                        $('#edit-role').append('<option value="' + value[0] + '" selected style= "color: orange;">' + value[1] + '</option > ');
                    }
                    else {
                        $('#edit-role').append('<option value="' + value[0] + '">' + value[1] + '</option > ');
                    }
                })

                //Set Active user
                //$('#table-modal-user #td-status').empty();
                //$('#table-modal-user #td-status').append(result.Data.active);
                $('#edit-status').find('option').remove();
                //console.log('status: ', parseInt(result.Data.active));
                if (result.Data.active) {
                    $('#edit-status').append('<option value="' + true + '" selected style= "color: orange;">Activated</option >');
                    $('#edit-status').append('<option value="' + false + '">Not Activated</option >');
                }
                else {
                    $('#edit-status').append('<option value="' + true + '">Activated</option >');
                    $('#edit-status').append('<option value="' + false + '" selected style= "color: orange;">Not Activated</option >');
                }

                //Edit security question
                $('#edit-question').find('option').remove();
                var question = [];
                result.Question.forEach((value) => {
                    var arr = $.map(value, function (value, index) {
                        return value;
                    })
                    question.push(arr);
                });
                question.forEach((value) => {
                    if (value[0] == parseInt(result.Data.security_question)) {
                        $('#edit-question').append('<option value="' + value[0] + '" selected style= "color: orange;">' + value[1] + '</option > ');
                    }
                    else {
                        $('#edit-question').append('<option value="' + value[0] + '">' + value[1] + '</option > ');
                    }
                })

                //Edit security answer
                $('#td-answer #input-answer').empty();
                $('#td-answer #input-answer').val(result.Data.s_answer);

                //show modal if success
                $('#myModal').modal({ show: true });
            },
            error: function (result) {
                alert('failed');
                console.log(result.User);
            }
        });
    });

    $('#btn-confirm').on('click', function () {
        //alert('clicked');

        if ($('#myModal').hasClass('in')) {
            var id = $('#input-id').val();
            var email = $('#input-email').val();
            var pwd = $('#input-pwd').val();
            var fullname = $('#input-fullname').val();
            var phone = $('#input-phone').val();
            var address = $('#input-address').val();
            var role_id = parseInt($('#edit-role').val());
            var status = $('#edit-status').val();
            var question_id = parseInt($('#edit-question').val()) + 1;
            var answer = $('#input-answer').val();

            var editedUser = {
                ID: id,
                Email: email,
                Password: pwd,
                FullName: fullname,
                Phone: phone,
                Address: address,
                RoleID: role_id,
                Status: status,
                SecretQuestion_ID: question_id,
                Answer: answer
            }
            editedUser.Status = status == 'true' ? true : false;

            //console.log('editedUser: ', JSON.stringify(editedUser, undefined, 2));

            $.ajax({
                url: 'User/ManageUser_EditUser',
                type: 'POST',
                data: { editedUser: editedUser },
                dataType: 'json',
                success: function (result) {
                    if (result) {
                        $('#myModal').modal('hide');
                        swal({
                            text: 'Saved succeed',
                            icon: 'success',
                            timer: 1200
                        }).then((result) => {
                            if (result.dismiss === 'timer') {
                                location.reload()
                                console.log('I was closed by the timer')
                            }
                        })

                    }
                    else {
                        //alert(data);

                    }
                },
                error: function (err) {

                }

            });
        }


    })

    function convertDataToArray(data) {
        return new Promise((resolve, reject) => {
            getRole().then((role) => {
                var d = [];
                for (var i = 0; i < data.length; i++) {
                    var arr = $.map(data[i], function (value, index) {
                        if (index == 'Password') {
                            value = '.................................';
                        }

                        if (index == 'RoleID') {
                            value = role[value];
                        }

                        return value;
                    });
                    arr.splice(8, 1);
                    var button = '<button type="button" class="btn btn-success" id="btn-edit" data-id="' + data[i].ID + '">Edit</button>';
                    arr.push(button);
                    d.push(arr);
                }
                resolve(d);
            })
        })
    }

    function getRole() {
        return new Promise( (resolve, reject) => {
            let role = [];
            $.ajax({
                url: 'User/getRole',
                type: 'GET',
                dataType: 'json',
                success: function (result) {
                    role = $.map(result.Role, function (value, index) {
                        return value.roleName;
                    })
                    resolve(role);
                },
                error: function (err) {
                    reject(role);
                }
            });
        });
    }
</script>

