// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PPCRental.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UC001_SearchFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "UC001_Search.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UC001_Search", "\tAs a potential customer i want search \r\n\tI want to search for project by a simpl" +
                    "e phrase\r\n\tSo that I can easily allocate project by something I remember from th" +
                    "em.", ProgrammingLanguage.CSharp, new string[] {
                        "web"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "UC001_Search")))
            {
                global::PPCRental.AcceptanceTests.Features.UC001_SearchFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyName",
                        "District",
                        "Street",
                        "Ward",
                        "Type of Project",
                        "Beds",
                        "Bathroom",
                        "Area",
                        "Price"});
            table1.AddRow(new string[] {
                        "ASA LightT",
                        "Q.1",
                        "Mạc Đĩnh Chi",
                        "Bến Nghé",
                        "Appartment",
                        "3",
                        "3",
                        "150",
                        "71000"});
            table1.AddRow(new string[] {
                        "CALEDON Tan Phu",
                        "Tân phú",
                        "Điện Biên Phủ",
                        "3",
                        "Appartment",
                        "2",
                        "2",
                        "130",
                        "55000"});
            table1.AddRow(new string[] {
                        "VINH LOC Central",
                        "Q.8",
                        "Bà Huyện Thanh Quan",
                        "1",
                        "Appartment",
                        "3",
                        "2",
                        "120",
                        "70000"});
            table1.AddRow(new string[] {
                        "SAIGONRESE Plaza",
                        "Bình Thạnh",
                        "Nguyễn Bỉnh Khiêm",
                        "2",
                        "Appartment",
                        "3",
                        "3",
                        "200",
                        "90000"});
            table1.AddRow(new string[] {
                        "CAPSULE Residence",
                        "Gò Vấp",
                        "Trần Hưng Đạo",
                        "9",
                        "Appartment",
                        "2",
                        "2",
                        "130",
                        "49500"});
            table1.AddRow(new string[] {
                        "FLORAL HOA BINH",
                        "Q.3",
                        "Trần Huy Liệu",
                        "1",
                        "Appartment",
                        "4",
                        "4",
                        "180",
                        "79000"});
            table1.AddRow(new string[] {
                        "ORIENT Plaza",
                        "Nhà Bè",
                        "Cao Lỗ",
                        "Thới An",
                        "Appartment",
                        "2",
                        "2",
                        "100",
                        "42200"});
            table1.AddRow(new string[] {
                        "RIVA Garden",
                        "Q.7",
                        "Phan Đăng Lưu",
                        "11",
                        "Appartment",
                        "3",
                        "4",
                        "168",
                        "78400"});
            table1.AddRow(new string[] {
                        "CITY Gate",
                        "Q.1",
                        "Nguyễn Văn Cừ",
                        "5",
                        "Appartment",
                        "4",
                        "4",
                        "250",
                        "120000"});
            table1.AddRow(new string[] {
                        "MY HUNG Prop 3",
                        "Bình Thạnh",
                        "Võ Thị Sáu",
                        "Thủ Thiêm",
                        "Appartment",
                        "4",
                        "4",
                        "280",
                        "115000"});
#line 8
testRunner.Given("the following project", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Title should be matched")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UC001_Search")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void TitleShouldBeMatched()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Title should be matched", new string[] {
                        "mytag"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 24
 testRunner.When("I search for project by the phrase \'city\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("the list of found project should contain only: \'CITY Gate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Distric should be matched")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UC001_Search")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("web")]
        public virtual void DistricShouldBeMatched()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Distric should be matched", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 28
 testRunner.When("I search for project by the phrase \'Q.12\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("the list of found project should contain only: \'CITY Gate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
