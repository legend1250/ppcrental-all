// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PPCRental.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UC003_ViewDetailProjectFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "UC003_ViewDetailProject.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UC003_ViewDetailProject", "\tAs a potential customer\r\n\tI want to see the details of a project\r\n\tSo that I can" +
                    " better decide to buy it.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "UC003_ViewDetailProject")))
            {
                global::PPCRental.AcceptanceTests.Features.UC003_ViewDetailProjectFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "PropertyName",
                        "Price",
                        "Area",
                        "Bedroom",
                        "Bathroom",
                        "ParkingPlace"});
            table1.AddRow(new string[] {
                        "ASA LightT",
                        "71000",
                        "150",
                        "3",
                        "3",
                        "1"});
            table1.AddRow(new string[] {
                        "CALEDON Tan Phu",
                        "55000",
                        "130",
                        "2",
                        "2",
                        "1"});
            table1.AddRow(new string[] {
                        "VINH LOC Central",
                        "70000",
                        "120",
                        "3",
                        "2",
                        "1"});
            table1.AddRow(new string[] {
                        "SAIGONRESE Plaza",
                        "90000",
                        "200",
                        "3",
                        "3",
                        "1"});
            table1.AddRow(new string[] {
                        "CAPSULE Residence",
                        "49500",
                        "130",
                        "2",
                        "2",
                        "1"});
            table1.AddRow(new string[] {
                        "FLORAL HOA BINH",
                        "79000",
                        "180",
                        "4",
                        "4",
                        "1"});
            table1.AddRow(new string[] {
                        "ORIENT Plaza",
                        "42200",
                        "100",
                        "2",
                        "2",
                        "1"});
            table1.AddRow(new string[] {
                        "RIVA Garden",
                        "78400",
                        "168",
                        "3",
                        "4",
                        "1"});
            table1.AddRow(new string[] {
                        "CITY Gate",
                        "120000",
                        "250",
                        "4",
                        "4",
                        "1"});
            table1.AddRow(new string[] {
                        "MY HUNG Prop 3",
                        "115000",
                        "280",
                        "4",
                        "4",
                        "1"});
#line 6
testRunner.Given("the following project", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("detail project can be seen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UC003_ViewDetailProject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void DetailProjectCanBeSeen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("detail project can be seen", new string[] {
                        "mytag"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 21
 testRunner.When("I open the details of \'CITY Gate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("the project details should show detail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
